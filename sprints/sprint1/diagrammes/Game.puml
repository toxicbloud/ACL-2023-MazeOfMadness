@startuml Game models class diagram
title Game models class diagram

class Maze {
    - width: int
    - height: int
    ---
    + Maze()
    + Maze(width: int, height: int)
    + getWidth(): int
    + getHeight(): int
    + getTile(x: int, y: int): Tile
}

abstract Entity {
    - position: Vector2
    - size: Vector2
    ---
    # Entity(sprite: Sprite)
    + getSprite(): Sprite
    + getPosition(): Vector2
    + getSize(): Vector2
    + setPosition(position: Vector2)
    + setSize(size: Vector2)
    + update()
    + render()
}
Entity "1" -- "1" Sprite : sprite
Entity <|-- Item
Entity <|-- Living
Entity <|-- Tile

abstract Item {

}

Item <|-- Weapon
Item <|-- Potion

abstract Potion {
    - health: int
    - strength: int
    - speed: int
    - timeToLive: float
    ---
    # Potion(sprite: Sprite, health: int, strength: int, speed: int, timeToLive: float)
    + getHealth(): int
    + setHealth(health: int)
    + getStrength(): int
    + setStrength(strength: int)
    + getSpeed(): int
    + setSpeed(speed: int)
}
Potion <|-- HealthPotion
Potion <|-- StrengthPotion
Potion <|-- SpeedPotion

class HealthPotion {
    ---
    + HealthPotion()
}

class StrengthPotion {
    ---
    + StrengthPotion()
}

class SpeedPotion {
    ---
    + SpeedPotion()
}

abstract Weapon {
    - attack: int
    # Weapon(int attack)
}
Weapon <|-- WeaponFist
Weapon <|-- WeaponSword
Weapon <|-- WeaponAxe
Weapon <|-- WeaponBow

abstract WeaponFist {

}

WeaponFist <|-- PlayerFist
WeaponFist <|-- ZombieFist
WeaponFist <|-- GhostFist
WeaponFist <|-- BossFist

class PlayerFist {
    ---
    + PlayerFist()
}

class ZombieFist {
    ---
    + ZombieFist()
}

class GhostFist {
    ---
    + GhostFist()
}

class BossFist {
    ---
    + BossFist()
}

class WeaponSword {
    ---
    + WeaponSword()
}

class WeaponAxe {
    ---
    + WeaponAxe()
}

class WeaponBow {
    ---
    + WeaponBow()
}

abstract Living {
    - health: int
    - speed : int
    ---
    # Living(sprite: Sprite)
    + getHealth(): int
    + setHealth(health: int)
    + getAttack(): int
    + setAttack(attack: int)
    + getDefense(): int
    + setDefense(defense: int)
    + getSpeed(): int
    + setSpeed(speed: int)
    + attack(living: Living): boolean
    + takeDamage(damage: int) : boolean
    + regen(health: int) : boolean
    + isDead(): boolean
}
Living "1" -left- "1" Weapon : weapon
Living <|-- Player
Living <|-- Monster

class Player {
    
}

abstract Monster {

}
Monster <|-- Zombie
Monster <|-- Ghost
Monster <|-- Boss

class Zombie {
    ---
    + Zombie()
}

class Ghost {
    ---
    + Ghost()
}

class Boss {
    ---
    + Boss()
}

class Maze {

}

class Texture {
    - path: String
    ---
    + Texture(path: String)
    + getPath(): String
}

class Sprite {
    - width: int
    - height: int
    - xShift: int
    - yShift: int
    ---
    + Sprite(texture: Texture, width: int, height: int)
    + getWidth(): int
    + getHeight(): int
    + getSpriteTexture(): Texture
    + setXshift(x: int)
    + setYshift(y: int)
    + getXshift(): int
    + getYshift(): int
    + getTexture(): Texture
}
Sprite "1" -down- "1" Texture : texture

abstract Tile {
    - solid: boolean
    ---
    + Tile(sprite: Sprite, solid: boolean)
    + isSolid(): boolean
}
Tile <|-- Wall
Tile <|-- Ground
Ground <|-- GroundWater
Ground <|-- GroundRock

class Wall {
    ---
    + Wall()
}

abstract Ground {
    ---
    + Ground()
}

class GroundRock {
    ---
    + GroundRock()
}

class GroundWater {
    ---
    + GroundWater()
}

Maze "* " *--  Tile : tiles 
note on link #LightBlue
    2D-Array [row][column]
end note

@enduml